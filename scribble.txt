#Git

Git is a distributed version control system (vcs)

Git is a tool that helps multiple people work on the same code project or documents by tarcking & 
managing changes to the file.

Backup & Restore
Collaboration
Branching & Merging
Tracking Changes

Configure Git with Username & Email

git config --global user.name "name"
git config --global user.email "name@email.com"

git config --list

git init

git status

git add index.html #if specific file needs to be added

git add * #if all the file's needs to be added

_> Now the files are present the in staging area

git commit -m "Message"

git branch

_> Until specified we would be working in the main branch

#Git commit

A git commit is a command in git that captures a snapshot of the project's currently staged changes,
creating a permanent record in the repository's history.

git log

git diff

git show "Copy the required ID from git log command:file_path"

git checkout "Copy the required ID from git log command" -- index.html #if specific file is required

git checkout "Copy the required ID from git log command" -- * #if all the file's are required

git checkout master -- index.html #to get back to the latest version of the file

#Negative Cases

If we made any changes by mistake and save init

Case1: To undo changes, get the last successful change
git restore . or filename (. mean all files)

Case2: If we added the changes using git add then..

git restore --staged <file_path> #To unstage
git restore <file_path> #To discard changes in the working directory

git diff --cached

Case3: Added changes to staging area (didn't commit) after this added more changes to file
//To get the staged changes
git restore --worktree index.html

Case4: How about if we did commit wrong files also
git reset --soft HEAD^ (uncommit and keep the changes)
git reset --hard HEAD^ (uncommit and discard the changes)

#git log
Useful log options

git log -p -2  (last two commit with diff)
git log --stat (summary of changes)

git log --pretty=oneline
git log --pretty=format:"%h-%an,%ar:%s"

git log -S function_name

git log --grep="fix bug" (search commit message)

git log --since="2024-01-01"
git log --until="2024-01-01"

git log --author="Tom"
git log --no-merges

### ### ### ###

Remote repository

A remote repository refers to a version of your project that resides on a network server or a 
hosted repository on the internet.

…or create a new repository on the command line
echo "# test_repo" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:abtalks/test_repo.git
git push -u origin main

…or push an existing repository from the command line
git remote add origin git@github.com:abtalks/test_repo.git
git branch -M main
git push -u origin main

#

git remote
git remote -v

git pull

### Quick Summary Git Commands ###

git status  #to check for any change in the repository
git diff    #to see the diff of current ver with last commited ver
git pull    #to fetch the latest files from remote repository
git add     #to add the modified files in staging area
git commit  #to add the changes in git repository
git push    #to puch the commited changes in remote repository
git log     #to see the old commits history
git clone   #copy of the target repository

#

git branch

git branch <name>
git checkout <name>