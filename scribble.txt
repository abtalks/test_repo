#Git

Git is a distributed version control system (vcs)

Git is a tool that helps multiple people work on the same code project or documents by tarcking & 
managing changes to the file.

Backup & Restore
Collaboration
Branching & Merging
Tracking Changes

Configure Git with Username & Email

git config --global user.name "name"
git config --global user.email "name@email.com"

git config --list

git init

git status

git add index.html #if specific file needs to be added

git add * #if all the file's needs to be added

_> Now the files are present the in staging area

git commit -m "Message"

git branch

_> Until specified we would be working in the main branch

#Git commit

A git commit is a command in git that captures a snapshot of the project's currently staged changes,
creating a permanent record in the repository's history.

git log

git diff

git show "Copy the required ID from git log command:file_path"

git checkout "Copy the required ID from git log command" -- index.html #if specific file is required

git checkout "Copy the required ID from git log command" -- * #if all the file's are required

git checkout master -- index.html #to get back to the latest version of the file

#Negative Cases

If we made any changes by mistake and save init

Case1: To undo changes, get the last successful change
git restore . or filename (. mean all files)

Case2: If we added the changes using git add then..

git restore --staged <file_path> #To unstage
git restore <file_path> #To discard changes in the working directory